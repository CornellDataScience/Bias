[{"/Users/roninsharma/Desktop/Cornell/CDS/dalle-clip-bias/web-app/src/index.js":"1","/Users/roninsharma/Desktop/Cornell/CDS/dalle-clip-bias/web-app/src/App.js":"2","/Users/roninsharma/Desktop/Cornell/CDS/dalle-clip-bias/web-app/src/reportWebVitals.js":"3","/Users/roninsharma/Desktop/Cornell/CDS/dalle-clip-bias/web-app/src/components/WebApp.jsx":"4","/Users/roninsharma/Desktop/Cornell/CDS/dalle-clip-bias/web-app/src/components/Navbar.jsx":"5","/Users/roninsharma/Desktop/Cornell/CDS/dalle-clip-bias/web-app/src/components/HomePage.jsx":"6"},{"size":500,"mtime":1635720947496,"results":"7","hashOfConfig":"8"},{"size":213,"mtime":1635720947650,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1635720947581,"results":"10","hashOfConfig":"8"},{"size":540,"mtime":1635720947290,"results":"11","hashOfConfig":"8"},{"size":2072,"mtime":1635720947256,"results":"12","hashOfConfig":"8"},{"size":1725,"mtime":1636260138520,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"18ogq8q",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/Users/roninsharma/Desktop/Cornell/CDS/dalle-clip-bias/web-app/src/index.js",[],["29","30"],"/Users/roninsharma/Desktop/Cornell/CDS/dalle-clip-bias/web-app/src/App.js",[],"/Users/roninsharma/Desktop/Cornell/CDS/dalle-clip-bias/web-app/src/reportWebVitals.js",[],"/Users/roninsharma/Desktop/Cornell/CDS/dalle-clip-bias/web-app/src/components/WebApp.jsx",[],"/Users/roninsharma/Desktop/Cornell/CDS/dalle-clip-bias/web-app/src/components/Navbar.jsx",["31"],"import React, { Component } from 'react';\nimport '../App.css';\n\nexport default class Navbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            page: 0\n        }\n    }\n\n    setStateAndRunCallback = (val) => {\n        this.setState(val, () => {\n            this.props.toCallBack(this.state);\n        });\n    }\n\n    render () {\n        return (\n            <div className=\"Navbar\">\n                <nav class=\"bg-gray-800\">\n                    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n                    <div class=\"flex items-center justify-between h-28\">\n                        <div class=\"flex items-center\">\n                        <div class=\"flex-shrink-0\">\n                            <img class=\"h-20 w-40\" src=\"\" alt=\"Photo\" />\n                        </div>\n                        <div class=\"hidden md:block\">\n                            <div class=\"ml-10 flex items-baseline space-x-3\">\n                                <button class=\"text-gray-300 hover:bg-gray-700 hover:text-white px-10 py-2 rounded-md text-2xl font-medium\" onClick={() => this.setStateAndRunCallback({page: 0})} type=\"button\">Home</button>\n                                <button class=\"text-gray-300 hover:bg-gray-700 hover:text-white px-10 py-2 rounded-md text-2xl font-medium\" onClick={() => this.setStateAndRunCallback({page: 1})} type=\"button\">About</button>\n                                <button class=\"text-gray-300 hover:bg-gray-700 hover:text-white px-10 py-2 rounded-md text-2xl font-medium\" onClick={() => this.setStateAndRunCallback({page: 2})} type=\"button\">Blog Feed</button>\n                                <button class=\"text-gray-300 hover:bg-gray-700 hover:text-white px-10 py-2 rounded-md text-2xl font-medium\" onClick={() => this.setStateAndRunCallback({page: 3})} type=\"button\">Events</button>\n                            </div>\n                        </div>\n                        </div>\n                    </div>\n                    </div>\n                </nav>\n            </div>\n        )\n    }\n}","/Users/roninsharma/Desktop/Cornell/CDS/dalle-clip-bias/web-app/src/components/HomePage.jsx",["32"],"import React, { useState, useEffect } from 'react';\nimport '../App.css';\n\nfunction HomePage(props) {\n    const [currentValue, updateValue] = useState('test-start');\n    const [currentImage, updateImage] = useState('');\n\n    useEffect(() => {\n        // fetch('/test').then(res => res.json()).then(data => {\n        //     updateValue(data.output);\n        // })\n        fetch('/clip').then(res => res.json()).then(data => {\n            console.log(data.output);\n        })\n    }, [currentImage]);\n\n    if (props.display === 0) {\n        return (\n            <div className=\"HomePage\">\n                <header class=\"bg-white shadow\">\n                    <div class=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                        <h1 class=\"text-3xl font-bold text-gray-900\">Home Page</h1>\n                    </div>\n                </header>\n                <main>\n                    <div class=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n                        <div class=\"px-4 py-6 sm:px-0\">\n                            <div class=\"border-4 border-dashed border-gray-200 rounded-lg h-96\">\n                                <h1 class=\"text-blue-400 font-extrabold\">Test2</h1>\n                                <p class=\"tracking-widest\">{currentValue}</p>\n                                <button onClick={() => updateImage('./output.png')\n                                }>Run CLIP</button>\n                                <img src = {currentImage} alt = 'Current CLIP Output' />\n                            </div>\n                        </div>\n                    </div>\n                </main>\n            </div>\n        )\n    } else {\n        return <div className=\"HomePage\"></div>\n    }\n\n}\n\nexport default HomePage;",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":26,"column":29,"nodeType":"39","endLine":26,"endColumn":73},{"ruleId":"40","severity":1,"message":"41","line":5,"column":26,"nodeType":"42","messageId":"43","endLine":5,"endColumn":37},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'updateValue' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]